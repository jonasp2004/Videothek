<Window x:Class="Ui.Desktop.Windows.UserManagement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Ui.Desktop.Windows"
        mc:Ignorable="d" 
        DataContext="{Binding Usermanager, Source={StaticResource Locator}}" Title="{Binding WindowTitle}"
        Height="460" Width="825" WindowStartupLocation="CenterScreen" Background="{x:Null}" AllowsTransparency="True" 
        ResizeMode="NoResize" WindowStyle="None" FontFamily="{StaticResource EncodeSans}" FontSize="16">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\UI_Elements.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Border x:Name="windowBorder" Background="#FFF1F1F1" CornerRadius="5" Margin="10" RenderTransformOrigin="0.5,0.5" >
        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform x:Name="windowScale" />
            </TransformGroup>
        </Border.RenderTransform>
        <Border.Effect>
            <DropShadowEffect Direction="270" BlurRadius="10" ShadowDepth="1" />
        </Border.Effect>
        <Grid>
            <!-- Fenster-Titelleiste -->
            <Border Height="100" Style="{StaticResource windowTitleBar}"  VerticalAlignment="Top">
                <Grid>
                    <TextBlock x:Name="windowTitle" Text="{Binding WindowTitle, Mode=OneWay}" TextAlignment="Center" Padding="0,4,0,0" MouseDown="windowTitle_MouseDown" Height="100" VerticalAlignment="Center" />
                    <Grid Margin="6,6,0,0" Height="17" VerticalAlignment="Top" HorizontalAlignment="Left" Width="17">
                        <Ellipse x:Name="ell_closeWindow" Style="{StaticResource redEllipse}" MouseDown="ell_closeWindow_MouseDown" />
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Ellipse.MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="windowScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.009" From="1" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                    <Ellipse x:Name="ell_minimizeWindow" Style="{StaticResource yellowEllipse}" Margin="28,6,0,0" Height="17" VerticalAlignment="Top" HorizontalAlignment="Left" Width="17" MouseDown="ell_minimizeWindow_MouseDown" />
                    <Ellipse x:Name="ell_maximizeWindow" Style="{StaticResource greenEllipse}" Margin="50,6,0,0" Height="17" VerticalAlignment="Top" HorizontalAlignment="Left" Width="17" MouseDown="ell_maximizeWindow_MouseDown" />
                </Grid>
            </Border>
            <Grid x:Name="ribbon" Margin="0,30,0,0" Height="70" VerticalAlignment="Top">
                <Button Style="{StaticResource squareButton}" Margin="19,6,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Left" Width="36" >
                    <Image Source="/Images/add_22px.png" Height="22" Width="22" />
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="grd_addItem" Storyboard.TargetProperty="(Border.Opacity)" From="0" To="1" Duration="0:0:0.15" />
                                    <DoubleAnimation Storyboard.TargetName="grd_addItemFadeIn" Storyboard.TargetProperty="(TranslateTransform.Y)" From="-93" To="0" Duration="0:0:0.15" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <TextBlock Text="Hinzufügen" FontSize="12" Margin="10,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                <Button Style="{StaticResource squareButton}" Margin="78,6,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Left" Width="36" >
                    <Image Source="/Images/muell_22px.png" Height="22" Width="22" />
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="grd_deleteItemAnimation" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <TextBlock Text="Hinzufügen" FontSize="12" Margin="69,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                <Border CornerRadius="2" Margin="131,3,0,17" HorizontalAlignment="Left" Width="2" >
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#7F9C9C9C"/>
                            <GradientStop Color="#FF8A8A8A" Offset="0.5"/>
                            <GradientStop Color="#7F9C9C9C" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Button Style="{StaticResource squareButton}" Margin="178,6,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Left" Width="36" >
                    <Image Source="/Images/refresh_18dp.png" Height="22" Width="22" RenderTransformOrigin="0.5,0.5" >
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="img_refreshImage" />
                                <RotateTransform x:Name="img_refreshImage_rot" />
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="img_refreshImage" Storyboard.TargetProperty="(ScaleTransform.ScaleY)">
                                        <LinearDoubleKeyFrame Value="0.8" KeyTime="0:0:0.1"/>
                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.15"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="img_refreshImage" Storyboard.TargetProperty="(ScaleTransform.ScaleX)">
                                        <LinearDoubleKeyFrame Value="0.8" KeyTime="0:0:0.1"/>
                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.15"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="img_refreshImage_rot" Storyboard.TargetProperty="(RotateTransform.Angle)" From ="0" To="359" Duration="0:0:1" RepeatBehavior="0:0:5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <TextBlock Text="Ansicht aktualisieren" FontSize="12" Margin="148,0,0,10" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
            </Grid>
            <DataGrid ItemsSource="{Binding Users}" Margin="10,110,10,10" />
            <Border x:Name="grd_addItem" Margin="10,30,0,0" Height="231" VerticalAlignment="Top" HorizontalAlignment="Left" Width="255" Background="#FFD3D2D3" CornerRadius="5" RenderTransformOrigin="0.5,0.5" Opacity="0">
                <Border.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform x:Name="grd_addItemFadeIn" Y="-280"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Effect>
                    <DropShadowEffect Direction="270" ShadowDepth="1" BlurRadius="10" Opacity="0.4"/>
                </Border.Effect>
                <Grid>
                    <TextBlock Text="Benutzer hinzufügen" FontFamily="{StaticResource EncodeSansBlack}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" />
                    <TextBlock Text="Benutzername" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,35,0,0" />
                    <TextBox Style="{StaticResource textBox}" VerticalAlignment="Top" Margin="10,55,10,0" />
                    <TextBlock Text="E-Mail" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,86,0,0" />
                    <TextBox Style="{StaticResource textBox}" VerticalAlignment="Top" Margin="10,106,10,0" />
                    <TextBlock Text="Passwort" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,135,0,0" />
                    <TextBox Style="{StaticResource textBox}" VerticalAlignment="Top" Margin="10,155,10,0" />
                    <Grid>
                        <Button Style="{StaticResource blueButton}" Margin="0,0,10,14" HorizontalAlignment="Right" Width="100" Height="25" VerticalAlignment="Bottom" >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Images/check_15px.png" Height="16" Width="20" />
                                <TextBlock Text="Speichern" Margin="5,0,0,0" />
                            </StackPanel>
                        </Button>
                        <Button Style="{StaticResource normalButton}" Margin="0,0,115,14" Content="Abbrechen" HorizontalAlignment="Right" Width="85" Height="25" VerticalAlignment="Bottom" />
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="grd_addItem" Storyboard.TargetProperty="(Border.Opacity)" To="0" From="1" Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="grd_addItemFadeIn" Storyboard.TargetProperty="(TranslateTransform.Y)" To="-300" From="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                </Grid>
            </Border>
            <!-- Deletion dialog -->
            <Border CornerRadius="5" RenderTransformOrigin="0.5,0.5">
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="grd_deleteItemAnimation" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0" From="1" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="grd_deleteItemAnimation" ScaleY="0"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#7F000000"/>
                        <GradientStop Color="#99000000" Offset="1"/>
                    </RadialGradientBrush>
                </Border.Background>
                <Border HorizontalAlignment="Center" VerticalAlignment="Center" Height="130" Width="300" CornerRadius="10" Background="#FFE8E8E8">
                    <Border.Effect>
                        <DropShadowEffect Direction="270" ShadowDepth="1" BlurRadius="10" />
                    </Border.Effect>
                    <Grid>
                        <TextBlock Text="Element wirklich löschen?" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="{StaticResource EncodeSansBlack}" Margin="0,10,0,0" />
                        <TextBlock Text="Soll das Element wirklich unwiderruflich gelöscht werden?" HorizontalAlignment="Center" VerticalAlignment="Top" TextWrapping="Wrap" TextAlignment="Center" Width="280" Margin="0,35,0,0" />
                        <Button Style="{StaticResource normalButton}" Content="Bestätigen" Margin="39,0,0,10" Height="35" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="107" />
                        <Button Style="{StaticResource blueButton}" Content="Abbrechen" Margin="0,0,42,10" Height="35" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="107" Foreground="White" />
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <Border.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="windowScale" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" From="0.9" To="1" Duration="0:0:0.07" />
                        <DoubleAnimation Storyboard.TargetName="windowScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" From="0.1" To="1" Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
    </Border>
</Window>